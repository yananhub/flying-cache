plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'tech.yanand.maven-central-publish' version '1.1.0'
}

group = 'tech.yanand'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework:spring-context:6.1.8'
    implementation 'org.springframework:spring-web:6.1.8'
    implementation 'org.slf4j:slf4j-api:2.0.13'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.2.6'
    testImplementation 'jakarta.servlet:jakarta.servlet-api:6.1.0-M2'
}

java {
    sourceCompatibility = '17'
    withJavadocJar()
    withSourcesJar()
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = 'Flying Cache'
                description = 'Spring cache extension for request and thread scoped'
                url = 'https://github.com/yananhub/flying-cache'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'yananhub'
                        name = 'Richard Zhang'
                        email = 'yanandwy@163.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/yananhub/flying-cache.git'
                    developerConnection = 'scm:git:https://github.com/yananhub/flying-cache.git'
                    url = 'https://github.com/yananhub/flying-cache'
                }
            }
        }
    }

    repositories {
        maven {
            name = "Local"
            url = layout.buildDirectory.dir('repos/bundles')
        }
    }
}

signing {
    if (System.getenv('SIGNING_KEY')) {
        def signingKey = System.getenv('SIGNING_KEY').replace('\\n', '\n')
        def signingPassword = System.getenv('SIGNING_PASSWORD')
        useInMemoryPgpKeys(signingKey, signingPassword)

        sign publishing.publications.mavenJava
    }
}

javadoc {
    options.addBooleanOption('html5', true)
}

mavenCentral {
    repoDir = layout.buildDirectory.dir('repos/bundles')
    authToken = System.getenv('MAVEN_UPLOAD_TOKEN')
}